{"ast":null,"code":"var _jsxFileName = \"O:\\\\WEB DEVELOPMENT\\\\React Projects\\\\todoapp\\\\src\\\\Task.jsx\",\n    _s = $RefreshSig$();\n\nimport { isEditable } from \"@testing-library/user-event/dist/utils\";\nimport React from \"react\";\nimport { useState } from \"react\"; // import { taskList,setTaskList } from \"./App\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Task = props => {\n  _s();\n\n  const {\n    taskList,\n    setTasklist,\n    checked,\n    onCheck,\n    taskName,\n    id,\n    onSelect\n  } = props;\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleEditing = e => {\n    console.log(e);\n    setIsEditing(!isEditing);\n    taskList[e.target.id] = e.target.parentElement.innerText;\n    setTasklist(() => {\n      return [...taskList];\n    });\n    console.log(e.target.parentElement.innerText);\n    console.log(\"Editing : \" + e.target.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"toDoItem done\",\n      style: {\n        opacity: checked ? \"50%\" : \"100%\"\n      },\n      children: [checked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"checkbox\",\n        onClick: onCheck,\n        children: checked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-check-double green\",\n            style: {\n              fontSize: \"1.4rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"toDoTitle\",\n        contentEditable: isEditing ? true : false,\n        children: [taskName, /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-trash-can red\",\n          style: {\n            fontSize: \"1.4rem\"\n          },\n          id: id,\n          onClick: onSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fa-solid ${isEditing ? \"fa-check\" : \"fa-pen-to-square\"}`,\n          style: {\n            fontSize: \"1.4rem\"\n          },\n          id: id,\n          onClick: handleEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Task, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["isEditable","React","useState","Task","props","taskList","setTasklist","checked","onCheck","taskName","id","onSelect","isEditing","setIsEditing","handleEditing","e","console","log","target","parentElement","innerText","opacity","fontSize"],"sources":["O:/WEB DEVELOPMENT/React Projects/todoapp/src/Task.jsx"],"sourcesContent":["import { isEditable } from \"@testing-library/user-event/dist/utils\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\n// import { taskList,setTaskList } from \"./App\";\r\n\r\nconst Task = (props) => {\r\n  const { taskList, setTasklist, checked, onCheck, taskName, id, onSelect } =\r\n    props;\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const handleEditing = (e) => {\r\n    console.log(e);\r\n    setIsEditing(!isEditing);\r\n    taskList[e.target.id] = e.target.parentElement.innerText;\r\n    setTasklist(() => {\r\n      return [...taskList];\r\n    });\r\n    console.log(e.target.parentElement.innerText);\r\n    console.log(\"Editing : \" + e.target.id);\r\n  };\r\n  return (\r\n    <>\r\n      <li\r\n        className=\"toDoItem done\"\r\n        style={{ opacity: checked ? \"50%\" : \"100%\" }}\r\n      >\r\n        {checked ? (\r\n          <>\r\n            <p className=\"line\"></p>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <span className=\"checkbox\" onClick={onCheck}>\r\n          {checked ? (\r\n            <>\r\n              <i\r\n                className=\"fa-solid fa-check-double green\"\r\n                style={{ fontSize: \"1.4rem\" }}\r\n              ></i>\r\n              <p className=\"line\"></p>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </span>\r\n        {/* {!isEditable ? (\r\n          <span className=\"toDoTitle\">{props.taskName}</span>\r\n        ) : (\r\n          <span contentEditable={props.isEditable ? true : false}>\r\n            {props.taskName}\r\n          </span>\r\n        )} */}\r\n        <span className=\"toDoTitle\" contentEditable={isEditing ? true : false}>\r\n          {taskName}\r\n\r\n          <i\r\n            className=\"fa-solid fa-trash-can red\"\r\n            style={{ fontSize: \"1.4rem\" }}\r\n            id={id}\r\n            onClick={onSelect}\r\n          ></i>\r\n          {/* <i class=\"fa-solid fa-check\"></i> */}\r\n          <i\r\n            className={`fa-solid ${\r\n              isEditing ? \"fa-check\" : \"fa-pen-to-square\"\r\n            }`}\r\n            style={{ fontSize: \"1.4rem\" }}\r\n            id={id}\r\n            onClick={handleEditing}\r\n          ></i>\r\n        </span>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\nexport default Task;\r\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,wCAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAM;IAAEC,QAAF;IAAYC,WAAZ;IAAyBC,OAAzB;IAAkCC,OAAlC;IAA2CC,QAA3C;IAAqDC,EAArD;IAAyDC;EAAzD,IACJP,KADF;EAEA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;;EACA,MAAMY,aAAa,GAAIC,CAAD,IAAO;IAC3BC,OAAO,CAACC,GAAR,CAAYF,CAAZ;IACAF,YAAY,CAAC,CAACD,SAAF,CAAZ;IACAP,QAAQ,CAACU,CAAC,CAACG,MAAF,CAASR,EAAV,CAAR,GAAwBK,CAAC,CAACG,MAAF,CAASC,aAAT,CAAuBC,SAA/C;IACAd,WAAW,CAAC,MAAM;MAChB,OAAO,CAAC,GAAGD,QAAJ,CAAP;IACD,CAFU,CAAX;IAGAW,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,aAAT,CAAuBC,SAAnC;IACAJ,OAAO,CAACC,GAAR,CAAY,eAAeF,CAAC,CAACG,MAAF,CAASR,EAApC;EACD,CATD;;EAUA,oBACE;IAAA,uBACE;MACE,SAAS,EAAC,eADZ;MAEE,KAAK,EAAE;QAAEW,OAAO,EAAEd,OAAO,GAAG,KAAH,GAAW;MAA7B,CAFT;MAAA,WAIGA,OAAO,gBACN;QAAA,uBACE;UAAG,SAAS,EAAC;QAAb;UAAA;UAAA;UAAA;QAAA;MADF,iBADM,gBAKN,qCATJ,eAWE;QAAM,SAAS,EAAC,UAAhB;QAA2B,OAAO,EAAEC,OAApC;QAAA,UACGD,OAAO,gBACN;UAAA,wBACE;YACE,SAAS,EAAC,gCADZ;YAEE,KAAK,EAAE;cAAEe,QAAQ,EAAE;YAAZ;UAFT;YAAA;YAAA;YAAA;UAAA,QADF,eAKE;YAAG,SAAS,EAAC;UAAb;YAAA;YAAA;YAAA;UAAA,QALF;QAAA,gBADM,gBASN;MAVJ;QAAA;QAAA;QAAA;MAAA,QAXF,eA+BE;QAAM,SAAS,EAAC,WAAhB;QAA4B,eAAe,EAAEV,SAAS,GAAG,IAAH,GAAU,KAAhE;QAAA,WACGH,QADH,eAGE;UACE,SAAS,EAAC,2BADZ;UAEE,KAAK,EAAE;YAAEa,QAAQ,EAAE;UAAZ,CAFT;UAGE,EAAE,EAAEZ,EAHN;UAIE,OAAO,EAAEC;QAJX;UAAA;UAAA;UAAA;QAAA,QAHF,eAUE;UACE,SAAS,EAAG,YACVC,SAAS,GAAG,UAAH,GAAgB,kBAC1B,EAHH;UAIE,KAAK,EAAE;YAAEU,QAAQ,EAAE;UAAZ,CAJT;UAKE,EAAE,EAAEZ,EALN;UAME,OAAO,EAAEI;QANX;UAAA;UAAA;UAAA;QAAA,QAVF;MAAA;QAAA;QAAA;QAAA;MAAA,QA/BF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAuDD,CArED;;GAAMX,I;;KAAAA,I;AAsEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}