{"ast":null,"code":"var _jsxFileName = \"O:\\\\WEB DEVELOPMENT\\\\React Projects\\\\todoapp\\\\src\\\\Task.jsx\",\n    _s = $RefreshSig$();\n\nimport { isEditable } from \"@testing-library/user-event/dist/utils\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Task = props => {\n  _s();\n\n  const {\n    taskList,\n    handleEdit,\n    checked,\n    onCheck,\n    taskName,\n    id,\n    onSelect\n  } = props;\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleEditing = e => {\n    let newList = [...taskList];\n    console.log(e);\n    const text = e.target.parentElement.innerText;\n\n    if (text === \"\") {\n      alert(\"Please enter valid value\");\n      return;\n    }\n\n    setIsEditing(!isEditing);\n\n    if (isEditing && text != \"\") {\n      console.log(text);\n      newList[parseInt(e.target.id)] = text;\n      handleEdit(newList);\n    }\n\n    console.log(e.target.parentElement.innerText);\n    console.log(\"Editing : \" + e.target.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"toDoItem done\",\n      style: {\n        opacity: checked ? \"50%\" : \"100%\"\n      },\n      children: [checked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"checkbox\",\n        onClick: onCheck,\n        children: checked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-check-double green\",\n            style: {\n              fontSize: \"1.4rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"toDoTitle\",\n        contentEditable: isEditing ? true : false,\n        children: taskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-trash-can red\",\n        style: {\n          fontSize: \"1.4rem\"\n        },\n        id: id,\n        onClick: onSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `fa-solid ${isEditing ? \"fa-check\" : \"fa-pen-to-square\"}`,\n        style: {\n          fontSize: \"1.4rem\"\n        },\n        id: id,\n        onClick: handleEditing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Task, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["isEditable","React","useState","Task","props","taskList","handleEdit","checked","onCheck","taskName","id","onSelect","isEditing","setIsEditing","handleEditing","e","newList","console","log","text","target","parentElement","innerText","alert","parseInt","opacity","fontSize"],"sources":["O:/WEB DEVELOPMENT/React Projects/todoapp/src/Task.jsx"],"sourcesContent":["import { isEditable } from \"@testing-library/user-event/dist/utils\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst Task = (props) => {\r\n  const { taskList, handleEdit, checked, onCheck, taskName, id, onSelect } =\r\n    props;\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const handleEditing = (e) => {\r\n    let newList = [...taskList];\r\n    console.log(e);\r\n    const text = e.target.parentElement.innerText;\r\n    if (text === \"\") {\r\n      alert(\"Please enter valid value\");\r\n      return;\r\n    }\r\n\r\n    setIsEditing(!isEditing);\r\n    if (isEditing && text != \"\") {\r\n      console.log(text);\r\n      newList[parseInt(e.target.id)] = text;\r\n      handleEdit(newList);\r\n    }\r\n    console.log(e.target.parentElement.innerText);\r\n    console.log(\"Editing : \" + e.target.id);\r\n  };\r\n  return (\r\n    <>\r\n      <li\r\n        className=\"toDoItem done\"\r\n        style={{ opacity: checked ? \"50%\" : \"100%\" }}\r\n      >\r\n        {checked ? (\r\n          <>\r\n            <p className=\"line\"></p>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <span className=\"checkbox\" onClick={onCheck}>\r\n          {checked ? (\r\n            <>\r\n              <i\r\n                className=\"fa-solid fa-check-double green\"\r\n                style={{ fontSize: \"1.4rem\" }}\r\n              ></i>\r\n              <p className=\"line\"></p>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </span>\r\n\r\n        <span className=\"toDoTitle\" contentEditable={isEditing ? true : false}>\r\n          {taskName}\r\n        </span>\r\n\r\n        <i\r\n          className=\"fa-solid fa-trash-can red\"\r\n          style={{ fontSize: \"1.4rem\" }}\r\n          id={id}\r\n          onClick={onSelect}\r\n        ></i>\r\n        <i\r\n          className={`fa-solid ${isEditing ? \"fa-check\" : \"fa-pen-to-square\"}`}\r\n          style={{ fontSize: \"1.4rem\" }}\r\n          id={id}\r\n          onClick={handleEditing}\r\n        ></i>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\nexport default Task;\r\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,wCAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAM;IAAEC,QAAF;IAAYC,UAAZ;IAAwBC,OAAxB;IAAiCC,OAAjC;IAA0CC,QAA1C;IAAoDC,EAApD;IAAwDC;EAAxD,IACJP,KADF;EAEA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;;EACA,MAAMY,aAAa,GAAIC,CAAD,IAAO;IAC3B,IAAIC,OAAO,GAAG,CAAC,GAAGX,QAAJ,CAAd;IACAY,OAAO,CAACC,GAAR,CAAYH,CAAZ;IACA,MAAMI,IAAI,GAAGJ,CAAC,CAACK,MAAF,CAASC,aAAT,CAAuBC,SAApC;;IACA,IAAIH,IAAI,KAAK,EAAb,EAAiB;MACfI,KAAK,CAAC,0BAAD,CAAL;MACA;IACD;;IAEDV,YAAY,CAAC,CAACD,SAAF,CAAZ;;IACA,IAAIA,SAAS,IAAIO,IAAI,IAAI,EAAzB,EAA6B;MAC3BF,OAAO,CAACC,GAAR,CAAYC,IAAZ;MACAH,OAAO,CAACQ,QAAQ,CAACT,CAAC,CAACK,MAAF,CAASV,EAAV,CAAT,CAAP,GAAiCS,IAAjC;MACAb,UAAU,CAACU,OAAD,CAAV;IACD;;IACDC,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACK,MAAF,CAASC,aAAT,CAAuBC,SAAnC;IACAL,OAAO,CAACC,GAAR,CAAY,eAAeH,CAAC,CAACK,MAAF,CAASV,EAApC;EACD,CAjBD;;EAkBA,oBACE;IAAA,uBACE;MACE,SAAS,EAAC,eADZ;MAEE,KAAK,EAAE;QAAEe,OAAO,EAAElB,OAAO,GAAG,KAAH,GAAW;MAA7B,CAFT;MAAA,WAIGA,OAAO,gBACN;QAAA,uBACE;UAAG,SAAS,EAAC;QAAb;UAAA;UAAA;UAAA;QAAA;MADF,iBADM,gBAKN,qCATJ,eAWE;QAAM,SAAS,EAAC,UAAhB;QAA2B,OAAO,EAAEC,OAApC;QAAA,UACGD,OAAO,gBACN;UAAA,wBACE;YACE,SAAS,EAAC,gCADZ;YAEE,KAAK,EAAE;cAAEmB,QAAQ,EAAE;YAAZ;UAFT;YAAA;YAAA;YAAA;UAAA,QADF,eAKE;YAAG,SAAS,EAAC;UAAb;YAAA;YAAA;YAAA;UAAA,QALF;QAAA,gBADM,gBASN;MAVJ;QAAA;QAAA;QAAA;MAAA,QAXF,eAyBE;QAAM,SAAS,EAAC,WAAhB;QAA4B,eAAe,EAAEd,SAAS,GAAG,IAAH,GAAU,KAAhE;QAAA,UACGH;MADH;QAAA;QAAA;QAAA;MAAA,QAzBF,eA6BE;QACE,SAAS,EAAC,2BADZ;QAEE,KAAK,EAAE;UAAEiB,QAAQ,EAAE;QAAZ,CAFT;QAGE,EAAE,EAAEhB,EAHN;QAIE,OAAO,EAAEC;MAJX;QAAA;QAAA;QAAA;MAAA,QA7BF,eAmCE;QACE,SAAS,EAAG,YAAWC,SAAS,GAAG,UAAH,GAAgB,kBAAmB,EADrE;QAEE,KAAK,EAAE;UAAEc,QAAQ,EAAE;QAAZ,CAFT;QAGE,EAAE,EAAEhB,EAHN;QAIE,OAAO,EAAEI;MAJX;QAAA;QAAA;QAAA;MAAA,QAnCF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AA8CD,CApED;;GAAMX,I;;KAAAA,I;AAqEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}